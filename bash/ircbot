#!/bin/bash

CURL_BIN=$(/usr/bin/which curl)
TAIL_BIN=$(/usr/bin/which tail)
UPTIME_BIN=$(/usr/bin/which uptime)
SED_BIN=$(/usr/bin/which sed)
GREP_BIN=$(/usr/bin/which grep)
CUT_BIN=$(/usr/bin/which cut)
PING_BIN=$(/usr/bin/which ping)
MKTEMP_BIN=$(/usr/bin/which mktemp)
RM_BIN=$(/usr/bin/which rm)
CAT_BIN=$(/usr/bin/which cat)
NOHUP_BIN=$(/usr/bin/which nohup)
CHMOD_BIN=$(/usr/bin/which chmod)
TR_BIN=$(/usr/bin/which tr)
UNAME_BIN=$(/usr/bin/which uname)
ID_BIN=$(/usr/bin/which id)
CXX=$(/usr/bin/which g++)

# These are for your protection
GCC_FLAGS="-finput-charset=UTF-8 -O2 -std=c++0x -pedantic-errors -Wfatal-errors -Wall -Wextra -Wno-empty-body -Wno-missing-field-initializers -Wwrite-strings -Wno-deprecated -Wno-unused -Wno-non-virtual-dtor -Wno-variadic-macros -fno-use-linker-plugin -fmessage-length=0 -ftemplate-depth-128 -fno-merge-constants -fno-nonansi-builtins -fno-gnu-keywords -fno-elide-constructors -fstrict-aliasing -fstack-protector-all -Winvalid-pch -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_GLIBCXX_CONCEPT_CHECKS"

#
# configuration

nick="`basename $0`"	# nickname
name="$0"		# real name
chan="#bashbot"		# channels to join
mode="+i"		# irc mode

# end of configuration
# use our login name if there's no nickname
nick="${nick:-$USER}"

owner="$1"

# see if we can find a realname for our nickname
name="${name:-`grep $nick /etc/passwd | cut -d : -f 5`}"
host="$2"
port="$3"

USE_KEYWORDS="0"
KEYWORDS=()
KEYWORD_RESPONSES=()
ALLOW_REVERSE_SHELL=0

ALLOWED_PM_CONTROLLERS=( $owner )

debug(){
  ( echo "$*" >>irc-debug 2>/dev/null )
}

#
# msg_handler handles private messages
msg_handler(){

  if [ -e handler_callbacks ]; then
    source handler_callbacks
  fi

  debug "Privmsg: " "$*"

  SENDER=${1%%\!*}
  SENDER=${SENDER:1}

  debug "Sender: $SENDER"

  DESTINATION="$3"

  debug "Dest: $DESTINATION vs $nick"

  shift 3

  if [ "$DESTINATION" == "$nick" ]; then
      handler_callback_tome "$SENDER" $*
      return
  fi

  if [ "${DESTINATION:0:1}" == "#" ]; then
      handler_callback_tochan "$SENDER" "$DESTINATION" $*
      return
  fi

}

# redirect error messages to file `irc-errors'
exec 3<> irc-errors 2>&3-

if [ ! "$owner" -o ! "$host" ]; then
  echo "usage: `basename $0` owner server [port]"
  exit 1
fi

if [ ! "$port" ]; then
  port="6667"
fi

# try to connect
if ! exec 3<> /dev/tcp/$host/$port; then
  echo "`basename $0`: unable to connect to $host:$port"
  exit 1
fi

set -f

#exec 4<> irc-debug

# duplicate standard input and output with the newly created socket
exec 0<&3 1>&3-

# register to the server
echo "USER $nick ${mode:-+iw} $nick :$name"
echo "NICK $nick"
# join channels
for c in $chan; do echo "JOIN $c"; done

while read; do
  set -- ${REPLY//$'\r'/}

#  echo "$*" >>&4

  # answer the critical ping request
  # otherwise the server will disconnect us
  [ "$1" == "PING" ] && echo "PONG $2"


  if [ "$2" == "PRIVMSG" ] ; then
    msg_handler $*
  fi

  if [ "$2" == "JOIN" ] ; then
    debug "Join Event $*"
  fi

done

exec 1<&- 2<&-
